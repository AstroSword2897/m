import React, { useState } from 'react';

const NoteSummarizer: React.FC = () => {
  const [noteContent, setNoteContent] = useState('');
  const [summary, setSummary] = useState('');
  const [fileName, setFileName] = useState('');

  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file) {
      setFileName(file.name);
      const reader = new FileReader();
      reader.onload = (e) => {
        if (e.target?.result) {
          setNoteContent(e.target.result as string);
        }
      };
      reader.readAsText(file);
    }
  };

  const handleSummarize = () => {
    if (noteContent.trim() === '') {
      alert('Please upload a note or type some content to summarize.');
      return;
    }
    // Placeholder for AI summarization logic
    setSummary(`[Summary of: ${fileName || 'User Input'}] This is a simulated summary of the provided text. In a real application, this would be generated by an AI model like t5-small.`);
  };

  return (
    <div className="note-summarizer">
      <h3>Note Summarizer</h3>
      <div className="input-group">
        <input type="file" accept=".txt,.md" onChange={handleFileChange} />
        {fileName && <p>Selected file: {fileName}</p>}
        <textarea
          placeholder="Or paste your notes here..."
          value={noteContent}
          onChange={(e) => setNoteContent(e.target.value)}
          rows={10}
        />
        <button onClick={handleSummarize}>Summarize Notes</button>
      </div>
      {summary && (
        <div className="summary-output">
          <h4>Summary:</h4>
          <p>{summary}</p>
        </div>
      )}
    </div>
  );
};

export default NoteSummarizer; 